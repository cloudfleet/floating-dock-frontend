var module=angular.module("rails.resource",["ngResource"]);module.factory("Resource",["$resource",function(a){return function(b,c,d){var e={update:{method:"put",isArray:!1},create:{method:"post"}};d=angular.extend(e,d);var f=a(b,c,d);return f.prototype.$save=function(a,b){return this.id?this.$update(a,b):this.$create(a,b)},f}}]),angular.module("marinaFrontendApp",["ngResource","ngSanitize","ui.router","ui.bootstrap","rails.resource","ng-token-auth","angularMoment"]),angular.module("marinaFrontendApp").config(["$controllerProvider","$compileProvider","$filterProvider","$provide","$authProvider",function(a,b,c,d,e){var f=angular.module("marinaFrontendApp");e.configure({apiUrl:"/api/v1"}),f.controller=a.register,f.directive=b.directive,f.filter=c.register,f.factory=d.factory,f.service=d.service,f.constant=d.constant,f.value=d.value}]),angular.module("marinaFrontendApp").run(["$rootScope","$state","$stateParams",function(a,b,c){a.$state=b,a.$stateParams=c}]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(a,b,c){c.html5Mode(!0),b.otherwise("/"),a.state("index",{url:"/",templateUrl:"views/index.html"}).state("app",{"abstract":!0,url:"",templateUrl:"views/app.html",resolve:{auth:["$auth",function(a){return a.validateUser()}]}}).state("app.dashboard",{url:"/dashboard",templateUrl:"views/app_dashboard.html",controller:"DashboardCtrl",resolve:{dashboard_data:["marinaApi",function(a){return a.Dashboard.get()}]}}).state("app.profile",{url:"/profile/:id",templateUrl:"views/app_profile.html",controller:"ProfileCtrl",resolve:{profile_user:["marinaApi","$stateParams",function(a,b){return a.User.get({id:b.id})}]}}).state("app.repository",{url:"/repos/:owner/:name",templateUrl:"views/app_repository.html",controller:"RepositoryCtrl",resolve:{repository:["marinaApi","$stateParams",function(a,b){return a.Repository.get({namespace:b.owner,name:b.name})}]}}).state("app.repository_list",{url:"/repos/:owner",templateUrl:"views/app_repository_list.html",controller:"RepositoryListCtrl",resolve:{repositoryList:["marinaApi","$stateParams",function(a,b){return a.Repository.query({namespace:b.owner})}]}}).state("app.repository_edit",{url:"/repos/:owner/:name/edit",templateUrl:"views/app_repository_form.html",controller:"RepositoryCtrl",resolve:{repository:["marinaApi","$stateParams",function(a,b){return a.Repository.get({namespace:b.owner,name:b.name})}]}}).state("app.repository_new",{url:"/repos/new",templateUrl:"views/app_repository_form.html",controller:"RepositoryCtrl",resolve:{repository:["marinaApi",function(a){return new a.Repository}]}}).state("app.organization_edit",{url:"/organizations/:id/edit",templateUrl:"views/app_organization_form.html",controller:"OrganizationCtrl",resolve:{organization:["marinaApi","$stateParams",function(a,b){return a.Organization.get({id:b.id})}]}}).state("app.organization_new",{url:"/organizations/new",templateUrl:"views/app_organization_form.html",controller:"OrganizationCtrl",resolve:{organization:["marinaApi",function(a){return new a.Organization}]}}).state("app.repository_build_logs",{url:"/repos/:owner/:name/builds/:build_id/logs",templateUrl:"views/app_repository_build_logs.html"}).state("auth",{"abstract":!0,url:"/auth",templateUrl:"views/auth.html"}).state("auth.register",{url:"/register",templateUrl:"views/auth_register.html"}).state("auth.login",{url:"/login",templateUrl:"views/auth_login.html"})}]),angular.module("marinaFrontendApp").controller("AppCtrl",["$scope","$window","$auth","globals",function(a,b,c,d){function e(a){var b=a.navigator.userAgent||a.navigator.vendor||a.opera;return/iPhone|iPod|iPad|Silk|Android|BlackBerry|Opera Mini|IEMobile/.test(b)}d.loadGlobalConfig().then(function(b){a.config=b});var f=!!navigator.userAgent.match(/MSIE/i);f&&angular.element(b.document.body).addClass("ie"),e(b)&&angular.element(b.document.body).addClass("smart"),a.app={name:"Floating Dock",version:"1.0.1",color:{primary:"#e26826",info:"#088076",success:"#27c24c",warning:"#fad733",danger:"#f05050",light:"#e8eff0",dark:"#3a3f51",black:"#1c2b36"},settings:{themeID:1,navbarHeaderColor:"bg-cf-orange",asideColor:"bg-black",headerFixed:!0,asideFixed:!0,asideFolded:!0}}}]),angular.module("marinaFrontendApp").directive("uiToggleClass",[function(){return{restrict:"AC",link:function(a,b,c){b.on("click",function(a){function d(a,b){for(var c=new RegExp("\\s"+a.replace(/\*/g,"[A-Za-z0-9-_]+").split(" ").join("\\s|\\s")+"\\s","g"),d=" "+$(b)[0].className+" ";c.test(d);)d=d.replace(c," ");$(b)[0].className=$.trim(d)}a.preventDefault();var e=c.uiToggleClass.split(","),f=c.target&&c.target.split(",")||new Array(b),g=0;angular.forEach(e,function(a){var b=f[f.length&&g];-1!==a.indexOf("*")&&d(a,b),$(b).toggleClass(a),g++}),$(b).toggleClass("active")})}}}]),angular.module("marinaFrontendApp").factory("marinaApi",["Resource","$http","$q","$rootScope","$state",function(a,b,c,d,e){var f={User:a("/api/v1/users/:id",{id:"@id"}),Organization:a("/api/v1/organizations/:id",{id:"@id"}),Repository:a("/api/v1/repos/:namespace/:name",{namespace:"@owner_name",name:"@name"},{create:{url:"/api/v1/repos",method:"POST"},query:{url:"/api/v1/repos/:namespace",method:"GET",isArray:!0}}),Dashboard:a("/api/v1/dashboard"),buildRepositoryTag:function(a,d){var e=c.defer();return b.post("/api/v1/repos/"+a.owner_name+"/"+a.name+"/tags/"+d+"/build").success(function(a){e.resolve(a)}).error(function(){e.resolve(null)}),e.promise},getBuildLogs:function(a,d){var e=c.defer();return b.get("/api/v1/repos/"+a+"/builds/"+d+"/logs").success(function(a){e.resolve(a)}).error(function(){e.resolve(null)}),e.promise}};return f}]),angular.module("marinaFrontendApp").factory("globals",["marinaApi","$rootScope","$q","$http",function(a,b,c,d){var e={availableNamespaces:function(){var a=b.user.organizations.filter(function(a){return a.role="admin"}).map(function(a){return a.name});return a.unshift(b.user.name),a},lastBuild:function(a){return a.builds?_.reverse(_.sortBy(a.builds,function(a){return a.end}))[0]:null},lastSuccessfulBuild:function(a){return a.builds?_.reverse(_.sortBy(a.builds.filter(function(a){return"success"==a.state}),function(a){return a.end}))[0]:null},loadGlobalConfig:function(){var a=c.defer();return d.get("/theme/config.json").success(function(b){a.resolve(b)}).error(function(){a.resolve(null)}),a.promise}};return e}]),angular.module("marinaFrontendApp").run(["$rootScope","globals",function(a,b){a.globals=b}]),angular.module("marinaFrontendApp").filter("fromNow",function(){return function(a){return moment(a).fromNow()}}).filter("statusBadgeClass",function(){return function(a){return a?"pushed"==a.state?"success":"failed"==a.state?"danger":"warning":"warning"}}),angular.module("marinaFrontendApp").controller("DashboardCtrl",["$scope","$stateParams","dashboard_data",function(a,b,c){a.dashboard_data=c}]),angular.module("marinaFrontendApp").controller("ProfileCtrl",["$scope","$stateParams","marinaApi","profile_user",function(a,b,c,d){a.profile_user=d,console.log(a.profile_user)}]),angular.module("marinaFrontendApp").controller("OrganizationCtrl",["$scope","$stateParams","$state","marinaApi","organization",function(a,b,c,d,e){a.organization=e,a.save=function(){a.organization.$save(function(){c.go("app.organization_edit",{id:a.organization.id})})}}]),angular.module("marinaFrontendApp").controller("RepositoryCtrl",["$scope","$stateParams","$state","repository","marinaApi",function(a,b,c,d,e){a.repository=d,a.lastBuild=function(){return a.repository.builds?a.repository.builds.sort(function(a,b){return a.end==b.end?0:a.end<b.end?1:-1})[0]:null},a.lastSuccessfulBuild=function(b){return a.repository.builds?a.repository.builds.filter(function(a){return"success"==a.state}).sort(function(a,b){return a.end==b.end?0:a.end<b.end?1:-1})[0]:null},a.canEdit=function(){return _.includes(a.globals.availableNamespaces(),a.repository.owner_name)},a.addRepositoryTag=function(){var b={docker_file_path:"/",name:"latest",reference:"master"};a.repository.repository_tags?a.repository.repository_tags.push(b):a.repository.repository_tags=[b]},a.removeRepositoryTag=function(b){a.repository.repository_tags[b]._destroy=1},a.save=function(){a.repository.$save(function(){c.go("app.repository",{owner:a.repository.owner_name,name:a.repository.name})})},a.buildTag=function(b){e.buildRepositoryTag(a.repository,b).then(function(){a.repository.$get({namespace:a.repository.owner_name,name:a.repository.name})})}}]),angular.module("marinaFrontendApp").controller("RepositoryListCtrl",["$scope","repositoryList","$stateParams",function(a,b,c){a.namespace=c.owner||"All",a.repositories=b}]),angular.module("marinaFrontendApp").controller("RepositoryBuildLogsCtrl",["$scope","$stateParams","marinaApi",function(a,b,c){a.repository_full_name=b.owner+"/"+b.name,a.build_id=b.build_id,c.getBuildLogs(a.repository_full_name,a.build_id).then(function(b){a.logs=b})}]),angular.module("marinaFrontendApp").run(["$rootScope","$auth","$state",function(a,b,c){a.$on("auth:login-success",function(a,b){c.go("app.dashboard")}),a.$on("auth:login-error",function(a,b){alert("auth failed because",b.errors[0])}),a.$on("auth:logout-success",function(a){c.go("index")}),a.$on("auth:registration-email-success",function(a,b){alert("A registration email was sent to "+b.email),c.go("index")}),a.$on("auth:registration-email-error",function(a,b){alert("Registration failed: "+reason.errors[0])})}]);
//# sourceMappingURL=scripts.efb18bfc.js.map